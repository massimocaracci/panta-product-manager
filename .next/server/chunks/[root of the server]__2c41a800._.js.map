{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/pages/api/products.js"],"sourcesContent":["// pages/api/products.js\nconst mockProducts = [\n    { id: 1, name: 'Laptop', price: 1200, category: 'Electronics' },\n    { id: 2, name: 'T-Shirt', price: 25, category: 'Clothing' },\n    { id: 3, name: 'Coffee Maker', price: 80, category: 'Appliances' },\n];\n\nexport default function handler(req, res) {\n    if (req.method === 'GET') {\n        res.status(200).json(mockProducts);\n    } else if (req.method === 'POST') {\n        // Simulate creating a new product (in-memory)\n        const newProduct = { ...req.body, id: mockProducts.length + 1 };\n        mockProducts.push(newProduct);\n        res.status(201).json(newProduct);  // 201 Created\n    } else if (req.method === 'PUT') {\n        // Simulate updating a product\n        const { id } = req.query; // Get the product ID from the query parameters\n        const updatedProduct = req.body;\n        const index = mockProducts.findIndex(product => product.id === parseInt(id));\n\n        if (index !== -1) {\n            mockProducts[index] = { ...mockProducts[index], ...updatedProduct };\n            res.status(200).json(mockProducts[index]);\n        } else {\n            res.status(404).json({ message: 'Product not found' });\n        }\n\n    } else if (req.method === 'DELETE') {\n        const { id } = req.query;\n        const index = mockProducts.findIndex(product => product.id === parseInt(id));\n\n        if (index !== -1) {\n            mockProducts.splice(index, 1);\n            res.status(204).end(); // No Content - successful deletion\n        } else {\n            res.status(404).json({ message: 'Product not found' });\n        }\n\n    }\n    else {\n        res.status(405).json({ message: 'Method Not Allowed' }); // Method Not Allowed\n    }\n}"],"names":[],"mappings":"AAAA,wBAAwB;;;;AACxB,MAAM,eAAe;IACjB;QAAE,IAAI;QAAG,MAAM;QAAU,OAAO;QAAM,UAAU;IAAc;IAC9D;QAAE,IAAI;QAAG,MAAM;QAAW,OAAO;QAAI,UAAU;IAAW;IAC1D;QAAE,IAAI;QAAG,MAAM;QAAgB,OAAO;QAAI,UAAU;IAAa;CACpE;AAEc,SAAS,QAAQ,GAAG,EAAE,GAAG;IACpC,IAAI,IAAI,MAAM,KAAK,OAAO;QACtB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IACzB,OAAO,IAAI,IAAI,MAAM,KAAK,QAAQ;QAC9B,8CAA8C;QAC9C,MAAM,aAAa;YAAE,GAAG,IAAI,IAAI;YAAE,IAAI,aAAa,MAAM,GAAG;QAAE;QAC9D,aAAa,IAAI,CAAC;QAClB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,aAAc,cAAc;IACrD,OAAO,IAAI,IAAI,MAAM,KAAK,OAAO;QAC7B,8BAA8B;QAC9B,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,+CAA+C;QACzE,MAAM,iBAAiB,IAAI,IAAI;QAC/B,MAAM,QAAQ,aAAa,SAAS,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK,SAAS;QAExE,IAAI,UAAU,CAAC,GAAG;YACd,YAAY,CAAC,MAAM,GAAG;gBAAE,GAAG,YAAY,CAAC,MAAM;gBAAE,GAAG,cAAc;YAAC;YAClE,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM;QAC5C,OAAO;YACH,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAoB;QACxD;IAEJ,OAAO,IAAI,IAAI,MAAM,KAAK,UAAU;QAChC,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;QACxB,MAAM,QAAQ,aAAa,SAAS,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK,SAAS;QAExE,IAAI,UAAU,CAAC,GAAG;YACd,aAAa,MAAM,CAAC,OAAO;YAC3B,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,mCAAmC;QAC9D,OAAO;YACH,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAoB;QACxD;IAEJ,OACK;QACD,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAqB,IAAI,qBAAqB;IAClF;AACJ","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,0HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,0HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}