{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/styles/theme.js"],"sourcesContent":["// styles/theme.js\nimport {createTheme} from '@mui/material/styles';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2196f3', // Example primary color\n        },\n        secondary: {\n            main: '#f50057', // Example secondary color\n        },\n    },\n});\n\nexport default theme;"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAClB;;AAEA,MAAM,QAAQ,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;IACtB,SAAS;QACL,SAAS;YACL,MAAM;QACV;QACA,WAAW;YACP,MAAM;QACV;IACJ;AACJ;uCAEe","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/pages/_app.js"],"sourcesContent":["// pages/_app.js\nimport React from 'react';\nimport {ThemeProvider} from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from '../styles/theme';\n\nfunction MyApp({Component, pageProps}) {\n    return (\n        <ThemeProvider theme={theme}>\n            {/* CssBaseline kickstarts a consistent baseline */}\n            <CssBaseline/>\n            <Component {...pageProps} />\n        </ThemeProvider>\n    );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AACA;AACA;AACA;;;;;;AAEA,SAAS,MAAM,EAAC,SAAS,EAAE,SAAS,EAAC;IACjC,qBACI,qKAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO,+GAAA,CAAA,UAAK;;0BAEvB,qKAAC,wJAAA,CAAA,UAAW;;;;;0BACZ,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAGpC;uCAEe","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/utils/api.js"],"sourcesContent":["// utils/api.js\nconst API_BASE_URL = '/api'; // Adjust if needed\n\nexport const getProducts = async () => {\n    const res = await fetch(`${API_BASE_URL}/products`);\n    if (!res.ok) {\n        throw new Error('Failed to fetch products');\n    }\n    return res.json();\n};\n\nexport const createProduct = async (productData) => {\n    const res = await fetch(`${API_BASE_URL}/products`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(productData),\n    });\n\n    if (!res.ok) {\n        console.log(await res.json())\n        throw new Error('Failed to create product');\n    }\n\n    return res.json();\n};\n\nexport const updateProduct = async (id, productData) => {\n    const res = await fetch(`${API_BASE_URL}/products?id=${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(productData),\n    });\n    if (!res.ok) {\n        console.log(await res.json())\n        throw new Error('Failed to update product');\n    }\n    return res.json();\n};\n\nexport const deleteProduct = async (id) => {\n    const res = await fetch(`${API_BASE_URL}/products?id=${id}`, {\n        method: 'DELETE',\n    });\n\n    if (!res.ok) {\n        throw new Error('Failed to delete product');\n    }\n    return res.ok; // or res.status, depending on what you need\n};\n"],"names":[],"mappings":"AAAA,eAAe;;;;;;;AACf,MAAM,eAAe,QAAQ,mBAAmB;AAEzC,MAAM,cAAc;IACvB,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC;IAClD,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,IAAI,IAAI;AACnB;AAEO,MAAM,gBAAgB,OAAO;IAChC,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;QAChD,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;IACzB;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,QAAQ,GAAG,CAAC,MAAM,IAAI,IAAI;QAC1B,MAAM,IAAI,MAAM;IACpB;IAEA,OAAO,IAAI,IAAI;AACnB;AAEO,MAAM,gBAAgB,OAAO,IAAI;IACpC,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,aAAa,EAAE,IAAI,EAAE;QACzD,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;IACzB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,QAAQ,GAAG,CAAC,MAAM,IAAI,IAAI;QAC1B,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,IAAI,IAAI;AACnB;AAEO,MAAM,gBAAgB,OAAO;IAChC,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,aAAa,EAAE,IAAI,EAAE;QACzD,QAAQ;IACZ;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,IAAI,EAAE,EAAE,4CAA4C;AAC/D","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/components/ProductTable/ProductTableModal.jsx"],"sourcesContent":["// components/ProductTable/ProductTableModal.jsx\nimport React, {useEffect, useState} from 'react';\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField,} from '@mui/material';\nimport {createProduct, updateProduct} from '../../utils/api';\n\nconst ProductTableModal = ({open, onClose, onCreate, onUpdate, product, isEditMode}) => {\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [category, setCategory] = useState('');\n\n    useEffect(() => {\n        if (product) {\n            setName(product.name || '');\n            setPrice(product.price || '');\n            setCategory(product.category || '');\n        } else {\n            // Reset form when opening for a new product\n            setName('');\n            setPrice('');\n            setCategory('');\n        }\n    }, [product]);\n\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const handleSubmit = async () => {\n        const productData = {\n            name,\n            price: parseFloat(price),\n            category,\n        };\n\n        try {\n            if (isEditMode && product) {\n                const updatedProduct = await updateProduct(product.id, productData);\n                onUpdate(updatedProduct);\n            } else {\n                const newProduct = await createProduct(productData);\n                onCreate(newProduct);\n            }\n            onClose();\n        } catch (error) {\n            console.error('Error submitting product:', error);\n        }\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>{isEditMode ? 'Edit Product' : 'Add Product'}</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Name\"\n                    type=\"text\"\n                    fullWidth\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Price\"\n                    type=\"number\"\n                    fullWidth\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Category\"\n                    type=\"text\"\n                    fullWidth\n                    value={category}\n                    onChange={(e) => setCategory(e.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleSubmit}>{isEditMode ? 'Update' : 'Create'}</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ProductTableModal;"],"names":[],"mappings":"AAAA,gDAAgD;;;;;AAChD;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAEA,MAAM,oBAAoB,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAC;IAC/E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,SAAS;YACT,QAAQ,QAAQ,IAAI,IAAI;YACxB,SAAS,QAAQ,KAAK,IAAI;YAC1B,YAAY,QAAQ,QAAQ,IAAI;QACpC,OAAO;YACH,4CAA4C;YAC5C,QAAQ;YACR,SAAS;YACT,YAAY;QAChB;IACJ,GAAG;QAAC;KAAQ;IAGZ,MAAM,cAAc;QAChB;IACJ;IAEA,MAAM,eAAe;QACjB,MAAM,cAAc;YAChB;YACA,OAAO,WAAW;YAClB;QACJ;QAEA,IAAI;YACA,IAAI,cAAc,SAAS;gBACvB,MAAM,iBAAiB,MAAM,CAAA,GAAA,4GAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,EAAE,EAAE;gBACvD,SAAS;YACb,OAAO;gBACH,MAAM,aAAa,MAAM,CAAA,GAAA,4GAAA,CAAA,gBAAa,AAAD,EAAE;gBACvC,SAAS;YACb;YACA;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC/C;IACJ;IAEA,qBACI,qKAAC,mLAAA,CAAA,SAAM;QAAC,MAAM;QAAM,SAAS;;0BACzB,qKAAC,kMAAA,CAAA,cAAW;0BAAE,aAAa,iBAAiB;;;;;;0BAC5C,qKAAC,wMAAA,CAAA,gBAAa;;kCACV,qKAAC,4LAAA,CAAA,YAAS;wBACN,SAAS;wBACT,QAAO;wBACP,OAAM;wBACN,MAAK;wBACL,SAAS;wBACT,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE3C,qKAAC,4LAAA,CAAA,YAAS;wBACN,QAAO;wBACP,OAAM;wBACN,MAAK;wBACL,SAAS;wBACT,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE5C,qKAAC,4LAAA,CAAA,YAAS;wBACN,QAAO;wBACP,OAAM;wBACN,MAAK;wBACL,SAAS;wBACT,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0BAGnD,qKAAC,wMAAA,CAAA,gBAAa;;kCACV,qKAAC,mLAAA,CAAA,SAAM;wBAAC,SAAS;kCAAa;;;;;;kCAC9B,qKAAC,mLAAA,CAAA,SAAM;wBAAC,SAAS;kCAAe,aAAa,WAAW;;;;;;;;;;;;;;;;;;AAIxE;uCAEe","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/components/ProductTable/ProductTableToolbar.jsx"],"sourcesContent":["// components/ProductTable/ProductTableToolbar.jsx\nimport React from 'react';\nimport {Box, Button, Toolbar, Typography} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport {styled} from '@mui/material/styles';\n\nconst StyledToolbar = styled(Toolbar)(({theme}) => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n}));\n\n\nconst ProductTableToolbar = ({onAddProduct}) => {\n\n    return (\n        <StyledToolbar>\n            <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                Products\n            </Typography>\n            <Box>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<AddIcon/>}\n                    onClick={onAddProduct}\n                >\n                    Add Product\n                </Button>\n            </Box>\n        </StyledToolbar>\n    )\n}\n\nexport default ProductTableToolbar;"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAClD;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mMAAA,CAAA,SAAM,AAAD,EAAE,sLAAA,CAAA,UAAO,EAAE,CAAC,EAAC,KAAK,EAAC,GAAK,CAAC;QAChD,SAAS;QACT,gBAAgB;QAChB,aAAa,MAAM,OAAO,CAAC;QAC3B,cAAc,MAAM,OAAO,CAAC;IAChC,CAAC;AAGD,MAAM,sBAAsB,CAAC,EAAC,YAAY,EAAC;IAEvC,qBACI,qKAAC;;0BACG,qKAAC,+LAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,IAAG;gBAAa,WAAU;0BAAM;;;;;;0BAGzD,qKAAC,0KAAA,CAAA,MAAG;0BACA,cAAA,qKAAC,mLAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,OAAM;oBACN,yBAAW,qKAAC,iJAAA,CAAA,UAAO;;;;;oBACnB,SAAS;8BACZ;;;;;;;;;;;;;;;;;AAMjB;uCAEe","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/components/ProductTable/ProductTableRow.jsx"],"sourcesContent":["// components/ProductTable/ProductTableRow.jsx\nimport React from 'react';\nimport {IconButton, TableCell, TableRow} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ProductTableRow = ({product, onEdit, onDelete}) => {\n    return (\n        <TableRow key={product.id}>\n            <TableCell>{product.id}</TableCell>\n            <TableCell>{product.name}</TableCell>\n            <TableCell>{product.price}</TableCell>\n            <TableCell>{product.category}</TableCell>\n            <TableCell>\n                <IconButton aria-label=\"edit\" onClick={onEdit}>\n                    <EditIcon/>\n                </IconButton>\n                <IconButton aria-label=\"delete\" onClick={onDelete}>\n                    <DeleteIcon/>\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default ProductTableRow;"],"names":[],"mappings":"AAAA,8CAA8C;;;;;AAC9C;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAEA,MAAM,kBAAkB,CAAC,EAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAC;IAChD,qBACI,qKAAC,yLAAA,CAAA,WAAQ;;0BACL,qKAAC,4LAAA,CAAA,YAAS;0BAAE,QAAQ,EAAE;;;;;;0BACtB,qKAAC,4LAAA,CAAA,YAAS;0BAAE,QAAQ,IAAI;;;;;;0BACxB,qKAAC,4LAAA,CAAA,YAAS;0BAAE,QAAQ,KAAK;;;;;;0BACzB,qKAAC,4LAAA,CAAA,YAAS;0BAAE,QAAQ,QAAQ;;;;;;0BAC5B,qKAAC,4LAAA,CAAA,YAAS;;kCACN,qKAAC,+LAAA,CAAA,aAAU;wBAAC,cAAW;wBAAO,SAAS;kCACnC,cAAA,qKAAC,kJAAA,CAAA,UAAQ;;;;;;;;;;kCAEb,qKAAC,+LAAA,CAAA,aAAU;wBAAC,cAAW;wBAAS,SAAS;kCACrC,cAAA,qKAAC,oJAAA,CAAA,UAAU;;;;;;;;;;;;;;;;;OAVR,QAAQ,EAAE;;;;;AAejC;uCAEe","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/components/ProductTable/ProductTable.jsx"],"sourcesContent":["// components/ProductTable/ProductTable.jsx\nimport React, {useEffect, useState} from 'react';\nimport {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@mui/material';\nimport {deleteProduct, getProducts} from '../../utils/api';\nimport ProductTableModal from './ProductTableModal';\nimport ProductTableToolbar from './ProductTableToolbar';\nimport ProductTableRow from './ProductTableRow';\n\n\nconst ProductTable = () => {\n    const [products, setProducts] = useState([]);\n    const [openModal, setOpenModal] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null); // For edit mode\n    const [isEditMode, setIsEditMode] = useState(false);\n\n    useEffect(() => {\n        fetchProducts();\n    }, []);\n\n    const fetchProducts = async () => {\n        try {\n            const data = await getProducts();\n            setProducts(data);\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            // Handle error (e.g., display an error message)\n        }\n    };\n\n    const handleOpenModal = () => {\n        setSelectedProduct(null);\n        setIsEditMode(false);\n        setOpenModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setOpenModal(false);\n    };\n\n    const handleCreateProduct = async (newProduct) => {\n        try {\n            // Optimistically update the UI\n            setProducts([...products, newProduct]);\n            setOpenModal(false);\n            fetchProducts()\n        } catch (error) {\n            console.error('Error creating product:', error);\n            // Revert the optimistic update and display an error message\n        }\n    };\n\n    const handleEditProduct = (product) => {\n        setSelectedProduct(product);\n        setIsEditMode(true);\n        setOpenModal(true);\n    };\n\n    const handleUpdateProduct = async (updatedProduct) => {\n        try {\n            // Optimistically update the UI\n            const updatedProducts = products.map((product) =>\n                product.id === updatedProduct.id ? updatedProduct : product\n            );\n            setProducts(updatedProducts);\n            setOpenModal(false);\n            fetchProducts()\n\n        } catch (error) {\n            console.error('Error updating product:', error);\n            // Revert the optimistic update and display an error message\n        }\n    };\n\n\n    const handleDeleteProduct = async (id) => {\n        try {\n            await deleteProduct(id);\n            setProducts(products.filter((product) => product.id !== id));\n\n        } catch (error) {\n            console.error('Error deleting product:', error);\n        }\n    };\n\n\n    return (\n        <Paper>\n            <ProductTableToolbar onAddProduct={handleOpenModal}/>\n            <TableContainer>\n                <Table aria-label=\"product table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Price</TableCell>\n                            <TableCell>Category</TableCell>\n                            <TableCell>Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {products.map((product) => (\n                            <ProductTableRow\n                                key={product.id}\n                                product={product}\n                                onEdit={() => handleEditProduct(product)}\n                                onDelete={() => handleDeleteProduct(product.id)}\n                            />\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <ProductTableModal\n                open={openModal}\n                onClose={handleCloseModal}\n                onCreate={handleCreateProduct}\n                onUpdate={handleUpdateProduct}\n                product={selectedProduct}\n                isEditMode={isEditMode}\n            />\n        </Paper>\n    );\n};\n\nexport default ProductTable;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["file:///Users/mcaracci/workspace/pantasoft/panta-product-manager/src/pages/index.js"],"sourcesContent":["// src/pages/index.js\nimport ProductTable from '../components/ProductTable/ProductTable';\n\nexport default function Home() {\n    return (\n        <div>\n            <ProductTable />\n        </div>\n    );\n}"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACrB;;;AAEe,SAAS;IACpB,qBACI,qKAAC;kBACG,cAAA,qKAAC,2IAAA,CAAA,UAAY;;;;;;;;;;AAGzB","debugId":null}}]
}